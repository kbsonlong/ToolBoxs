name: Build/release

on:
  push:
    tags:
      - 'v*.*.*'  # 当推送版本标签时触发
  workflow_dispatch:  # 允许手动触发
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

permissions:
  contents: write  # 允许创建 release 和上传文件

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: './app/package-lock.json'

      - name: Install dependencies
        run: npm ci
        working-directory: ./app
        env:
          CYPRESS_INSTALL_BINARY: 0  # 跳过 Cypress 二进制文件安装

      - name: Update version from tag
        if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${GITHUB_REF#refs/tags/}"
          fi
          # 移除版本号前的 'v' 前缀（如果存在）
          VERSION_NUMBER=${VERSION#v}
          echo "Updating version to: $VERSION_NUMBER"
          # 使用 npm version 命令更新版本号
          npm version $VERSION_NUMBER --no-git-tag-version
        working-directory: ./app
        shell: bash

      - name: Type check
        run: npm run type-check
        working-directory: ./app

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch' }}

          # Package root directory
          package_root: "./app"

          # Build script name
          build_script_name: "build"

          # Skip build step
          skip_build: false
